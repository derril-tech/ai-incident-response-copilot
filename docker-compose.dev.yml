version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: incident-postgres
    environment:
      POSTGRES_DB: incident_response
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ClickHouse for high-volume logs
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: incident-clickhouse
    environment:
      CLICKHOUSE_DB: incident_logs
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: password
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: incident-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NATS for messaging
  nats:
    image: nats:2.10-alpine
    container_name: incident-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-m", "8222"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: incident-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Create MinIO buckets
  minio-init:
    image: minio/mc:latest
    container_name: incident-minio-init
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/incident-artifacts --ignore-existing;
      /usr/bin/mc mb myminio/incident-reports --ignore-existing;
      /usr/bin/mc policy set public myminio/incident-artifacts;
      /usr/bin/mc policy set public myminio/incident-reports;
      exit 0;
      "

volumes:
  postgres_data:
  clickhouse_data:
  redis_data:
  minio_data:

networks:
  default:
    name: incident-network
